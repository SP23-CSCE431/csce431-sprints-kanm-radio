Inspecting 43 files
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

Offenses:

Gemfile:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
source "https://rubygems.org"
^
Gemfile:1:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
source "https://rubygems.org"
       ^^^^^^^^^^^^^^^^^^^^^^
Gemfile:4:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ruby "3.1.2"
     ^^^^^^^
Gemfile:7:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "rails", "~> 7.0.3"
    ^^^^^^^
Gemfile:7:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "rails", "~> 7.0.3"
             ^^^^^^^^^^
Gemfile:10:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "sprockets-rails"
    ^^^^^^^^^^^^^^^^^
Gemfile:13:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "pg", "~> 1.1"
    ^^^^
Gemfile:13:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "pg", "~> 1.1"
          ^^^^^^^^
Gemfile:16:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "puma", "~> 5.0"
    ^^^^^^
Gemfile:16:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "puma", "~> 5.0"
            ^^^^^^^^
Gemfile:19:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "importmap-rails"
    ^^^^^^^^^^^^^^^^^
Gemfile:22:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "turbo-rails"
    ^^^^^^^^^^^^^
Gemfile:25:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "stimulus-rails"
    ^^^^^^^^^^^^^^^^
Gemfile:28:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "jbuilder"
    ^^^^^^^^^^
Gemfile:40:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "tzinfo-data", platforms: %i[ mingw mswin x64_mingw jruby ]
    ^^^^^^^^^^^^^
Gemfile:40:34: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
gem "tzinfo-data", platforms: %i[ mingw mswin x64_mingw jruby ]
                                 ^
Gemfile:40:62: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
gem "tzinfo-data", platforms: %i[ mingw mswin x64_mingw jruby ]
                                                             ^
Gemfile:43:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "bootsnap", require: false
    ^^^^^^^^^^
Gemfile:59:22: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
  gem 'rubocop-rspec' 
                     ^
Gemfile:65:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "debug", platforms: %i[ mri mingw x64_mingw ]
      ^^^^^^^
Gemfile:65:30: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  gem "debug", platforms: %i[ mri mingw x64_mingw ]
                             ^
Gemfile:65:50: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  gem "debug", platforms: %i[ mri mingw x64_mingw ]
                                                 ^
Gemfile:68:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "rexml"
    ^^^^^^^
Gemfile:71:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "web-console"
      ^^^^^^^^^^^^^
Gemfile:72:3: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem rspec-rails should appear before web-console.
  gem "rspec-rails"
  ^^^^^^^^^^^^^^^^^
Gemfile:72:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "rspec-rails"
      ^^^^^^^^^^^^^
Gemfile:82:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "capybara"
      ^^^^^^^^^^
Gemfile:83:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "selenium-webdriver"
      ^^^^^^^^^^^^^^^^^^^^
Gemfile:84:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "webdrivers"
      ^^^^^^^^^^^^
Gemfile:85:3: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem simplecov should appear before webdrivers.
  gem 'simplecov', :require => false
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:85:20: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  gem 'simplecov', :require => false
                   ^^^^^^^^^^^
Gemfile:86:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
app/channels/application_cable/channel.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationCable
^
app/channels/application_cable/connection.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationCable
^
app/controllers/application_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationController < ActionController::Base
^
app/controllers/calendars_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CalendarsController < ApplicationController
^
app/controllers/calendars_controller.rb:2:41: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_calendar, only: %i[ show edit update destroy ]
                                        ^
app/controllers/calendars_controller.rb:2:66: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_calendar, only: %i[ show edit update destroy ]
                                                                 ^
app/controllers/calendars_controller.rb:10:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def show ...
  ^^^^^^^^
app/controllers/calendars_controller.rb:19:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def edit ...
  ^^^^^^^^
app/controllers/calendars_controller.rb:28:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to calendar_url(@calendar), notice: "Calendar was successfully created." }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/calendars_controller.rb:28:68: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to calendar_url(@calendar), notice: "Calendar was successfully created." }
                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/calendars_controller.rb:29:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render :show, status: :created, location: @calendar }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/calendars_controller.rb:31:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { render :new, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/calendars_controller.rb:32:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render json: @calendar.errors, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/calendars_controller.rb:41:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to calendar_url(@calendar), notice: "Calendar was successfully updated." }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/calendars_controller.rb:41:68: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to calendar_url(@calendar), notice: "Calendar was successfully updated." }
                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/calendars_controller.rb:42:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render :show, status: :ok, location: @calendar }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/calendars_controller.rb:44:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { render :edit, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/calendars_controller.rb:45:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render json: @calendar.errors, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/calendars_controller.rb:52:15: C: [Correctable] Rails/SaveBang: Use destroy! instead of destroy if the return value is not checked.
    @calendar.destroy
              ^^^^^^^
app/controllers/calendars_controller.rb:55:21: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      format.html { redirect_to calendars_url, notice: "Calendar was successfully destroyed." }
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/calendars_controller.rb:55:56: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      format.html { redirect_to calendars_url, notice: "Calendar was successfully destroyed." }
                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/calendars_controller.rb:56:21: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      format.json { head :no_content }
                    ^^^^^^^^^^^^^^^^
app/controllers/calendars_controller.rb:60:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/calendars_controller.rb:62:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def set_calendar
^^^^
app/controllers/calendars_controller.rb:62:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_calendar ...
    ^^^^^^^^^^^^^^^^
app/controllers/calendars_controller.rb:67:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def calendar_params
^^^^
app/controllers/calendars_controller.rb:67:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def calendar_params ...
    ^^^^^^^^^^^^^^^^^^^
app/controllers/members_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class MembersController < ApplicationController
^
app/controllers/members_controller.rb:2:39: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_member, only: %i[ show edit update destroy ]
                                      ^
app/controllers/members_controller.rb:2:64: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_member, only: %i[ show edit update destroy ]
                                                               ^
app/controllers/members_controller.rb:10:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def show ...
  ^^^^^^^^
app/controllers/members_controller.rb:19:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def edit ...
  ^^^^^^^^
app/controllers/members_controller.rb:28:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to member_url(@member), notice: "Member was successfully created." }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/members_controller.rb:28:64: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to member_url(@member), notice: "Member was successfully created." }
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/members_controller.rb:29:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render :show, status: :created, location: @member }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/members_controller.rb:31:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { render :new, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/members_controller.rb:32:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render json: @member.errors, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/members_controller.rb:41:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to member_url(@member), notice: "Member was successfully updated." }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/members_controller.rb:41:64: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to member_url(@member), notice: "Member was successfully updated." }
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/members_controller.rb:42:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render :show, status: :ok, location: @member }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/members_controller.rb:44:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { render :edit, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/members_controller.rb:45:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render json: @member.errors, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/members_controller.rb:52:13: C: [Correctable] Rails/SaveBang: Use destroy! instead of destroy if the return value is not checked.
    @member.destroy
            ^^^^^^^
app/controllers/members_controller.rb:55:21: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      format.html { redirect_to members_url, notice: "Member was successfully destroyed." }
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/members_controller.rb:55:54: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      format.html { redirect_to members_url, notice: "Member was successfully destroyed." }
                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/members_controller.rb:56:21: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      format.json { head :no_content }
                    ^^^^^^^^^^^^^^^^
app/controllers/members_controller.rb:60:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/members_controller.rb:62:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def set_member
^^^^
app/controllers/members_controller.rb:62:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_member ...
    ^^^^^^^^^^^^^^
app/controllers/members_controller.rb:67:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def member_params
^^^^
app/controllers/members_controller.rb:67:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def member_params ...
    ^^^^^^^^^^^^^^^^^
app/controllers/show_hosts_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ShowHostsController < ApplicationController
^
app/controllers/show_hosts_controller.rb:2:42: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_show_host, only: %i[ show edit update destroy ]
                                         ^
app/controllers/show_hosts_controller.rb:2:67: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_show_host, only: %i[ show edit update destroy ]
                                                                  ^
app/controllers/show_hosts_controller.rb:10:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def show ...
  ^^^^^^^^
app/controllers/show_hosts_controller.rb:19:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def edit ...
  ^^^^^^^^
app/controllers/show_hosts_controller.rb:28:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to show_host_url(@show_host), notice: "Show host was successfully created." }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/show_hosts_controller.rb:28:70: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to show_host_url(@show_host), notice: "Show host was successfully created." }
                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/show_hosts_controller.rb:29:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render :show, status: :created, location: @show_host }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/show_hosts_controller.rb:31:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { render :new, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/show_hosts_controller.rb:32:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render json: @show_host.errors, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/show_hosts_controller.rb:41:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to show_host_url(@show_host), notice: "Show host was successfully updated." }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/show_hosts_controller.rb:41:70: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to show_host_url(@show_host), notice: "Show host was successfully updated." }
                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/show_hosts_controller.rb:42:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render :show, status: :ok, location: @show_host }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/show_hosts_controller.rb:44:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { render :edit, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/show_hosts_controller.rb:45:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render json: @show_host.errors, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/show_hosts_controller.rb:52:16: C: [Correctable] Rails/SaveBang: Use destroy! instead of destroy if the return value is not checked.
    @show_host.destroy
               ^^^^^^^
app/controllers/show_hosts_controller.rb:55:21: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      format.html { redirect_to show_hosts_url, notice: "Show host was successfully destroyed." }
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/show_hosts_controller.rb:55:57: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      format.html { redirect_to show_hosts_url, notice: "Show host was successfully destroyed." }
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/show_hosts_controller.rb:56:21: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      format.json { head :no_content }
                    ^^^^^^^^^^^^^^^^
app/controllers/show_hosts_controller.rb:60:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/show_hosts_controller.rb:62:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def set_show_host
^^^^
app/controllers/show_hosts_controller.rb:62:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_show_host ...
    ^^^^^^^^^^^^^^^^^
app/controllers/show_hosts_controller.rb:67:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def show_host_params
^^^^
app/controllers/show_hosts_controller.rb:67:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def show_host_params ...
    ^^^^^^^^^^^^^^^^^^^^
app/controllers/shows_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ShowsController < ApplicationController
^
app/controllers/shows_controller.rb:2:37: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_show, only: %i[ show edit update destroy ]
                                    ^
app/controllers/shows_controller.rb:2:62: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_show, only: %i[ show edit update destroy ]
                                                             ^
app/controllers/shows_controller.rb:10:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def show ...
  ^^^^^^^^
app/controllers/shows_controller.rb:19:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def edit ...
  ^^^^^^^^
app/controllers/shows_controller.rb:28:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to show_url(@show), notice: "Show was successfully created." }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/shows_controller.rb:28:60: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to show_url(@show), notice: "Show was successfully created." }
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/shows_controller.rb:29:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render :show, status: :created, location: @show }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/shows_controller.rb:31:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { render :new, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/shows_controller.rb:32:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render json: @show.errors, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/shows_controller.rb:41:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to show_url(@show), notice: "Show was successfully updated." }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/shows_controller.rb:41:60: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to show_url(@show), notice: "Show was successfully updated." }
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/shows_controller.rb:42:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render :show, status: :ok, location: @show }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/shows_controller.rb:44:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { render :edit, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/shows_controller.rb:45:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render json: @show.errors, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/shows_controller.rb:52:11: C: [Correctable] Rails/SaveBang: Use destroy! instead of destroy if the return value is not checked.
    @show.destroy
          ^^^^^^^
app/controllers/shows_controller.rb:55:21: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      format.html { redirect_to shows_url, notice: "Show was successfully destroyed." }
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/shows_controller.rb:55:52: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      format.html { redirect_to shows_url, notice: "Show was successfully destroyed." }
                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/shows_controller.rb:56:21: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      format.json { head :no_content }
                    ^^^^^^^^^^^^^^^^
app/controllers/shows_controller.rb:60:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/shows_controller.rb:62:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def set_show
^^^^
app/controllers/shows_controller.rb:62:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_show ...
    ^^^^^^^^^^^^
app/controllers/shows_controller.rb:67:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def show_params
^^^^
app/controllers/shows_controller.rb:67:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def show_params ...
    ^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationHelper
^
app/helpers/calendars_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module CalendarsHelper
^
app/helpers/members_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module MembersHelper
^
app/helpers/show_hosts_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ShowHostsHelper
^
app/helpers/shows_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ShowsHelper
^
app/jobs/application_job.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationJob < ActiveJob::Base
^
app/mailers/application_mailer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationMailer < ActionMailer::Base
^
app/mailers/application_mailer.rb:2:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  default from: "from@example.com"
                ^^^^^^^^^^^^^^^^^^
app/mailers/application_mailer.rb:3:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  layout "mailer"
         ^^^^^^^^
app/models/application_record.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationRecord < ActiveRecord::Base
^
app/models/calendar.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Calendar < ApplicationRecord
^
app/models/calendar.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    belongs_to :show
^^^^
app/models/member.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Member < ApplicationRecord
^
app/models/member.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    has_many :shows, through: :show_hosts
^^^^
app/models/member.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    has_many :show_hosts
^^^^
app/models/member.rb:3:5: C: Rails/HasManyOrHasOneDependent: Specify a :dependent option.
    has_many :show_hosts
    ^^^^^^^^
app/models/member.rb:6:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :netid, :firstname, :lastname, :uin, :email, presence: true
^^^^
app/models/show.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Show < ApplicationRecord
^
app/models/show.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    has_many :members, through: :show_hosts
^^^^
app/models/show.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    has_many :show_hosts
^^^^
app/models/show.rb:3:5: C: Rails/HasManyOrHasOneDependent: Specify a :dependent option.
    has_many :show_hosts
    ^^^^^^^^
app/models/show.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :showname, presence: true
^^^^
app/models/show_host.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ShowHost < ApplicationRecord
^
app/models/show_host.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    belongs_to :show
^^^^
app/models/show_host.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    belongs_to :member
^^^^
app/views/calendars/_calendar.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract! calendar, :id, :show_id, :timeslot, :active, :created_at, :updated_at
^
app/views/calendars/_calendar.json.jbuilder:1:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.extract! calendar, :id, :show_id, :timeslot, :active, :created_at, :updated_at
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/calendars/_calendar.json.jbuilder:2:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.url calendar_url(calendar, format: :json)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/calendars/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array! @calendars, partial: "calendars/calendar", as: :calendar
^
app/views/calendars/index.json.jbuilder:1:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.array! @calendars, partial: "calendars/calendar", as: :calendar
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/calendars/index.json.jbuilder:1:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.array! @calendars, partial: "calendars/calendar", as: :calendar
                                 ^^^^^^^^^^^^^^^^^^^^
app/views/calendars/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial! "calendars/calendar", calendar: @calendar
^
app/views/calendars/show.json.jbuilder:1:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.partial! "calendars/calendar", calendar: @calendar
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/calendars/show.json.jbuilder:1:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.partial! "calendars/calendar", calendar: @calendar
              ^^^^^^^^^^^^^^^^^^^^
app/views/members/_member.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract! member, :id, :netid, :firstname, :lastname, :uin, :email, :phone, :shirt, :strikes, :points, :created_at, :updated_at
^
app/views/members/_member.json.jbuilder:1:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.extract! member, :id, :netid, :firstname, :lastname, :uin, :email, :phone, :shirt, :strikes, :points, :created_at, :updated_at
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/members/_member.json.jbuilder:2:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.url member_url(member, format: :json)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/members/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array! @members, partial: "members/member", as: :member
^
app/views/members/index.json.jbuilder:1:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.array! @members, partial: "members/member", as: :member
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/members/index.json.jbuilder:1:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.array! @members, partial: "members/member", as: :member
                               ^^^^^^^^^^^^^^^^
app/views/members/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial! "members/member", member: @member
^
app/views/members/show.json.jbuilder:1:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.partial! "members/member", member: @member
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/members/show.json.jbuilder:1:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.partial! "members/member", member: @member
              ^^^^^^^^^^^^^^^^
app/views/show_hosts/_show_host.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract! show_host, :id, :showid, :djid, :created_at, :updated_at
^
app/views/show_hosts/_show_host.json.jbuilder:1:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.extract! show_host, :id, :showid, :djid, :created_at, :updated_at
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/show_hosts/_show_host.json.jbuilder:2:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.url show_host_url(show_host, format: :json)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/show_hosts/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array! @show_hosts, partial: "show_hosts/show_host", as: :show_host
^
app/views/show_hosts/index.json.jbuilder:1:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.array! @show_hosts, partial: "show_hosts/show_host", as: :show_host
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/show_hosts/index.json.jbuilder:1:35: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.array! @show_hosts, partial: "show_hosts/show_host", as: :show_host
                                  ^^^^^^^^^^^^^^^^^^^^^^
app/views/show_hosts/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial! "show_hosts/show_host", show_host: @show_host
^
app/views/show_hosts/show.json.jbuilder:1:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.partial! "show_hosts/show_host", show_host: @show_host
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/show_hosts/show.json.jbuilder:1:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.partial! "show_hosts/show_host", show_host: @show_host
              ^^^^^^^^^^^^^^^^^^^^^^
app/views/shows/_show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract! show, :id, :showname, :showdescription, :created_at, :updated_at
^
app/views/shows/_show.json.jbuilder:1:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.extract! show, :id, :showname, :showdescription, :created_at, :updated_at
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/shows/_show.json.jbuilder:2:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.url show_url(show, format: :json)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/shows/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array! @shows, partial: "shows/show", as: :show
^
app/views/shows/index.json.jbuilder:1:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.array! @shows, partial: "shows/show", as: :show
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/shows/index.json.jbuilder:1:30: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.array! @shows, partial: "shows/show", as: :show
                             ^^^^^^^^^^^^
app/views/shows/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial! "shows/show", show: @show
^
app/views/shows/show.json.jbuilder:1:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.partial! "shows/show", show: @show
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/shows/show.json.jbuilder:1:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.partial! "shows/show", show: @show
              ^^^^^^^^^^^^
config.ru:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is used by Rack-based servers to start the application.
^
config.ru:3:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "config/environment"
                 ^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file should contain all the record creation needed to seed the database with its default values.
^
spec/feature/integration_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# location: spec/feature/integration_spec.rb
^
spec/feature/integration_spec.rb:4:1: C: RSpec/MultipleDescribes: Do not use multiple top-level example groups - try to nest them.
RSpec.describe 'Adding a new member', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:4:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe 'Adding a new member', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:5:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'valid inputs' do
  ^^^^^^^^
spec/feature/integration_spec.rb:7:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[netid]", with: '123'
            ^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:8:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[firstname]", with: 'John'
            ^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:9:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[lastname]", with: 'Appleseed'
            ^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:10:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[uin]", with: '123456789'
            ^^^^^^^^^^^^^
spec/feature/integration_spec.rb:11:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[email]", with: 'email@email.com'
            ^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:14:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('123')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:17:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'invalid inputs' do
  ^^^^^^^^
spec/feature/integration_spec.rb:19:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[netid]", with: ''
            ^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:20:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[firstname]", with: 'John'
            ^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:21:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[lastname]", with: 'Appleseed'
            ^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:22:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[uin]", with: '123456789'
            ^^^^^^^^^^^^^
spec/feature/integration_spec.rb:23:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[email]", with: 'email@email.com'
            ^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:25:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content("Netid can't be blank")
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:28:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'valid update' do
  ^^^^^^^^
spec/feature/integration_spec.rb:30:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[netid]", with: '123'
            ^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:31:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[firstname]", with: 'John'
            ^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:32:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[lastname]", with: 'Appleseed'
            ^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:33:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[uin]", with: '123456789'
            ^^^^^^^^^^^^^
spec/feature/integration_spec.rb:34:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[email]", with: 'email@email.com'
            ^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:39:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[netid]", with: '1234'
            ^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:42:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('1234')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:45:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'invalid update' do
  ^^^^^^^^
spec/feature/integration_spec.rb:47:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[netid]", with: '123'
            ^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:48:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[firstname]", with: 'John'
            ^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:49:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[lastname]", with: 'Appleseed'
            ^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:50:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[uin]", with: '123456789'
            ^^^^^^^^^^^^^
spec/feature/integration_spec.rb:51:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[email]", with: 'email@email.com'
            ^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:56:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[netid]", with: ''
            ^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:58:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content("Netid can't be blank")
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:61:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'valid delete' do
  ^^^^^^^^
spec/feature/integration_spec.rb:63:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[netid]", with: '123'
            ^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:64:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[firstname]", with: 'John'
            ^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:65:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[lastname]", with: 'Appleseed'
            ^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:66:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[uin]", with: '123456789'
            ^^^^^^^^^^^^^
spec/feature/integration_spec.rb:67:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[email]", with: 'email@email.com'
            ^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:72:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('Member was successfully destroyed')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:76:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
spec/feature/integration_spec.rb:77:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
spec/feature/integration_spec.rb:78:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe 'Adding a new show', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:79:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'valid inputs' do
  ^^^^^^^^
spec/feature/integration_spec.rb:81:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "show[showname]", with: '123'
            ^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:82:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "show[showdescription]", with: 'John'
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:85:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('123')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:88:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'invalid inputs' do
  ^^^^^^^^
spec/feature/integration_spec.rb:90:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "show[showname]", with: ''
            ^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:91:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "show[showdescription]", with: 'John'
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:93:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content("Showname can't be blank")
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:96:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'valid update' do
  ^^^^^^^^
spec/feature/integration_spec.rb:98:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "show[showname]", with: '123'
            ^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:99:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "show[showdescription]", with: 'John'
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:104:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "show[showname]", with: '1234'
            ^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:107:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('1234')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:110:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'invalid update' do
  ^^^^^^^^
spec/feature/integration_spec.rb:112:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "show[showname]", with: '123'
            ^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:113:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "show[showdescription]", with: 'John'
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:118:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "show[showname]", with: ''
            ^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:120:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content("Showname can't be blank")
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:123:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'valid destroy' do
  ^^^^^^^^
spec/feature/integration_spec.rb:125:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "show[showname]", with: '123'
            ^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:126:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "show[showdescription]", with: 'John'
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:131:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('Show was successfully destroyed')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:135:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe 'Adding a new show host', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:136:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'valid inputs' do
  ^^^^^^^^
spec/feature/integration_spec.rb:138:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[netid]", with: '123'
            ^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:139:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[firstname]", with: 'John'
            ^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:140:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[lastname]", with: 'Appleseed'
            ^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:141:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[uin]", with: '123456789'
            ^^^^^^^^^^^^^
spec/feature/integration_spec.rb:142:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[email]", with: 'email@email.com'
            ^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:145:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "show[showname]", with: '123'
            ^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:146:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "show[showdescription]", with: 'John'
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:150:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select '123', from: "show_host[show_id]"
                        ^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:151:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select '123', from: "show_host[member_id]"
                        ^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:152:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Create Show host"
             ^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:154:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('123')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:157:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'invalid inputs' do
  ^^^^^^^^
spec/feature/integration_spec.rb:159:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[netid]", with: '123'
            ^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:160:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[firstname]", with: 'John'
            ^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:161:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[lastname]", with: 'Appleseed'
            ^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:162:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[uin]", with: '123456789'
            ^^^^^^^^^^^^^
spec/feature/integration_spec.rb:163:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[email]", with: 'email@email.com'
            ^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:166:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "show[showname]", with: '123'
            ^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:167:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "show[showdescription]", with: 'John'
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:171:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select '123', from: "show_host[member_id]"
                        ^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:172:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Create Show host"
             ^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:173:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('Show must exist')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:176:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'valid update' do
  ^^^^^^^^
spec/feature/integration_spec.rb:176:3: C: RSpec/RepeatedDescription: Don't repeat descriptions within an example group.
  scenario 'valid update' do
  ^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:178:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[netid]", with: '123'
            ^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:179:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[firstname]", with: 'John'
            ^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:180:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[lastname]", with: 'Appleseed'
            ^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:181:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[uin]", with: '123456789'
            ^^^^^^^^^^^^^
spec/feature/integration_spec.rb:182:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[email]", with: 'email@email.com'
            ^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:185:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "show[showname]", with: '123'
            ^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:186:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "show[showdescription]", with: 'John'
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:189:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "show[showname]", with: '1234'
            ^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:190:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "show[showdescription]", with: 'John'
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:193:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select '123', from: "show_host[show_id]"
                        ^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:194:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select '123', from: "show_host[member_id]"
                        ^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:195:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Create Show host"
             ^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:197:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Show"
             ^^^^^^
spec/feature/integration_spec.rb:198:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Edit this show host"
             ^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:199:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select '1234', from: "show_host[show_id]"
                         ^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:200:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Update Show host"
             ^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:202:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('1234')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:205:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'valid update' do
  ^^^^^^^^
spec/feature/integration_spec.rb:205:3: C: RSpec/RepeatedDescription: Don't repeat descriptions within an example group.
  scenario 'valid update' do
  ^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:207:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[netid]", with: '123'
            ^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:208:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[firstname]", with: 'John'
            ^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:209:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[lastname]", with: 'Appleseed'
            ^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:210:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[uin]", with: '123456789'
            ^^^^^^^^^^^^^
spec/feature/integration_spec.rb:211:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[email]", with: 'email@email.com'
            ^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:214:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "show[showname]", with: '123'
            ^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:215:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "show[showdescription]", with: 'John'
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:218:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "show[showname]", with: '1234'
            ^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:219:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "show[showdescription]", with: 'John'
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:222:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select '123', from: "show_host[show_id]"
                        ^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:223:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select '123', from: "show_host[member_id]"
                        ^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:224:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Create Show host"
             ^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:226:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Show"
             ^^^^^^
spec/feature/integration_spec.rb:227:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Edit this show host"
             ^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:228:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select '', from: "show_host[show_id]"
                     ^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:229:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Update Show host"
             ^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:230:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('Show must exist')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:233:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'valid destroy' do
  ^^^^^^^^
spec/feature/integration_spec.rb:235:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[netid]", with: '123'
            ^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:236:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[firstname]", with: 'John'
            ^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:237:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[lastname]", with: 'Appleseed'
            ^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:238:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[uin]", with: '123456789'
            ^^^^^^^^^^^^^
spec/feature/integration_spec.rb:239:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "member[email]", with: 'email@email.com'
            ^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:242:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "show[showname]", with: '123'
            ^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:243:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "show[showdescription]", with: 'John'
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:247:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select '123', from: "show_host[show_id]"
                        ^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:248:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select '123', from: "show_host[member_id]"
                        ^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:249:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Create Show host"
             ^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:251:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Show"
             ^^^^^^
spec/feature/integration_spec.rb:252:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Destroy this show host"
             ^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:253:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('Show host was successfully destroyed.')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:255:1: C: [Correctable] RSpec/EmptyLineAfterExampleGroup: Add an empty line after describe.
end
^^^
spec/feature/integration_spec.rb:256:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
  RSpec.describe 'Adding a new show calendar', type: :feature do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:256:3: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
  RSpec.describe 'Adding a new show calendar', type: :feature do
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:257:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    scenario 'valid inputs' do
^^^^
spec/feature/integration_spec.rb:257:5: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
    scenario 'valid inputs' do
    ^^^^^^^^
spec/feature/integration_spec.rb:259:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      fill_in "show[showname]", with: '123'
              ^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:260:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      fill_in "show[showdescription]", with: 'John'
              ^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:264:27: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      select '123', from: "calendar[show_id]"
                          ^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:265:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      fill_in "calendar[timeslot]", with: '123'
              ^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:266:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      click_on "Create Calendar"
               ^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:268:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(page).to have_content('123')
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:270:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/feature/integration_spec.rb:271:5: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
    scenario 'invalid inputs' do
    ^^^^^^^^
spec/feature/integration_spec.rb:273:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      fill_in "calendar[timeslot]", with: '123'
              ^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:274:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      click_on "Create Calendar"
               ^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:275:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(page).to have_content('Show must exist')
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:277:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/feature/integration_spec.rb:278:5: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
    scenario 'valid update' do
    ^^^^^^^^
spec/feature/integration_spec.rb:280:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      fill_in "show[showname]", with: '123'
              ^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:281:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      fill_in "show[showdescription]", with: 'John'
              ^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:285:27: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      select '123', from: "calendar[show_id]"
                          ^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:286:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      fill_in "calendar[timeslot]", with: '123'
              ^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:287:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      click_on "Create Calendar"
               ^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:289:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      click_on "Show this calendar"
               ^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:290:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      click_on "Edit this calendar"
               ^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:291:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      fill_in "calendar[timeslot]", with: '125'
              ^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:292:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      click_on "Update Calendar"
               ^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:294:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(page).to have_content('125')
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:297:5: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
    scenario 'invalid update' do
    ^^^^^^^^
spec/feature/integration_spec.rb:299:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      fill_in "show[showname]", with: '123'
              ^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:300:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      fill_in "show[showdescription]", with: 'John'
              ^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:304:27: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      select '123', from: "calendar[show_id]"
                          ^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:305:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      fill_in "calendar[timeslot]", with: '123'
              ^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:306:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      click_on "Create Calendar"
               ^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:308:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      click_on "Show this calendar"
               ^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:309:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      click_on "Edit this calendar"
               ^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:310:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      select '', from: "calendar[show_id]"
                       ^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:311:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      click_on "Update Calendar"
               ^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:312:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(page).to have_content('Show must exist')
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:314:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/feature/integration_spec.rb:315:5: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
    scenario 'valid destroy' do
    ^^^^^^^^
spec/feature/integration_spec.rb:317:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      fill_in "show[showname]", with: '123'
              ^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:318:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      fill_in "show[showdescription]", with: 'John'
              ^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:322:27: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      select '123', from: "calendar[show_id]"
                          ^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:323:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      fill_in "calendar[timeslot]", with: '123'
              ^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:324:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      click_on "Create Calendar"
               ^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:326:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      click_on "Show this calendar"
               ^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:327:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      click_on "Destroy this calendar"
               ^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:328:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(page).to have_content('Calendar was successfully destroyed')
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:330:1: C: [Correctable] Layout/BlockAlignment: end at 330, 0 is not aligned with RSpec.describe 'Adding a new show calendar', type: :feature do at 256, 2.
end
^^^
spec/feature/integration_spec.rb:330:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/rails_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is copied to spec/ when you run 'rails generate rspec:install'
^
spec/rails_helper.rb:6:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
abort("The Rails environment is running in production mode!") if Rails.env.production?
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/rails_helper.rb:30:3: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
  abort e.to_s.strip
  ^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# location: spec/unit/unit_spec.rb
^
spec/unit/unit_spec.rb:4:1: C: RSpec/MultipleDescribes: Do not use multiple top-level example groups - try to nest them.
RSpec.describe Member, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:4:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe Member, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:6:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    described_class.new(netid: "123",
                               ^^^^^
spec/unit/unit_spec.rb:7:36: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                        firstname: "John",
                                   ^^^^^^
spec/unit/unit_spec.rb:8:35: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                        lastname: "Appleseed",
                                  ^^^^^^^^^^^
spec/unit/unit_spec.rb:9:30: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                        uin: "123456789",
                             ^^^^^^^^^^^
spec/unit/unit_spec.rb:10:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                        email: "email@email.com")
                               ^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:10:49: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
                        email: "email@email.com")
                                                ^
spec/unit/unit_spec.rb:14:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:14:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).to be_valid
           ^^^^^^^
spec/unit/unit_spec.rb:18:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.netid = nil
    ^^^^^^^
spec/unit/unit_spec.rb:19:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).not_to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:19:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).not_to be_valid
           ^^^^^^^
spec/unit/unit_spec.rb:21:4: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
end     
   ^^^^^
spec/unit/unit_spec.rb:23:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe Show, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:25:35: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    described_class.new(showname: "name", showdescription: "name")
                                  ^^^^^^
spec/unit/unit_spec.rb:25:60: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    described_class.new(showname: "name", showdescription: "name")
                                                           ^^^^^^
spec/unit/unit_spec.rb:29:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:29:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).to be_valid
           ^^^^^^^
spec/unit/unit_spec.rb:33:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.showname = nil
    ^^^^^^^
spec/unit/unit_spec.rb:34:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).not_to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:34:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).not_to be_valid
           ^^^^^^^
spec/unit/unit_spec.rb:36:4: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
end     
   ^^^^^
spec/unit/unit_spec.rb:36:5: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end     
    ^^^^
test/application_system_test_case.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/application_system_test_case.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/channels/application_cable/connection_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/channels/application_cable/connection_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/controllers/members_controller_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/controllers/members_controller_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/controllers/members_controller_test.rb:8:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get index" do
       ^^^^^^^^^^^^^^^^^^
test/controllers/members_controller_test.rb:13:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get new" do
       ^^^^^^^^^^^^^^^^
test/controllers/members_controller_test.rb:18:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should create member" do
       ^^^^^^^^^^^^^^^^^^^^^^
test/controllers/members_controller_test.rb:19:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_difference("Member.count") do
                      ^^^^^^^^^^^^^^
test/controllers/members_controller_test.rb:20:151: C: [Correctable] Layout/LineLength: Line is too long. [260/150]
      post members_url, params: { member: { email: @member.email, firstname: @member.firstname, lastname: @member.lastname, netid: @member.netid, phone: @member.phone, points: @member.points, shirt: @member.shirt, strikes: @member.strikes, uin: @member.uin } }
                                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/members_controller_test.rb:26:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should show member" do
       ^^^^^^^^^^^^^^^^^^^^
test/controllers/members_controller_test.rb:31:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get edit" do
       ^^^^^^^^^^^^^^^^^
test/controllers/members_controller_test.rb:36:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should update member" do
       ^^^^^^^^^^^^^^^^^^^^^^
test/controllers/members_controller_test.rb:37:151: C: [Correctable] Layout/LineLength: Line is too long. [267/150]
    patch member_url(@member), params: { member: { email: @member.email, firstname: @member.firstname, lastname: @member.lastname, netid: @member.netid, phone: @member.phone, points: @member.points, shirt: @member.shirt, strikes: @member.strikes, uin: @member.uin } }
                                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/members_controller_test.rb:41:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should destroy member" do
       ^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/members_controller_test.rb:42:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_difference("Member.count", -1) do
                      ^^^^^^^^^^^^^^
test/models/member_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/models/member_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/system/members_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "application_system_test_case"
^
test/system/members_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "application_system_test_case"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/members_test.rb:8:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "visiting the index" do
       ^^^^^^^^^^^^^^^^^^^^
test/system/members_test.rb:10:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_selector "h1", text: "Members"
                    ^^^^
test/system/members_test.rb:10:33: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_selector "h1", text: "Members"
                                ^^^^^^^^^
test/system/members_test.rb:13:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should create member" do
       ^^^^^^^^^^^^^^^^^^^^^^
test/system/members_test.rb:15:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "New member"
             ^^^^^^^^^^^^
test/system/members_test.rb:17:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Email", with: @member.email
            ^^^^^^^
test/system/members_test.rb:18:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Firstname", with: @member.firstname
            ^^^^^^^^^^^
test/system/members_test.rb:19:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Lastname", with: @member.lastname
            ^^^^^^^^^^
test/system/members_test.rb:20:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Netid", with: @member.netid
            ^^^^^^^
test/system/members_test.rb:21:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Phone", with: @member.phone
            ^^^^^^^
test/system/members_test.rb:22:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Points", with: @member.points
            ^^^^^^^^
test/system/members_test.rb:23:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Shirt", with: @member.shirt
            ^^^^^^^
test/system/members_test.rb:24:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Strikes", with: @member.strikes
            ^^^^^^^^^
test/system/members_test.rb:25:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Uin", with: @member.uin
            ^^^^^
test/system/members_test.rb:26:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Create Member"
             ^^^^^^^^^^^^^^^
test/system/members_test.rb:28:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_text "Member was successfully created"
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/members_test.rb:29:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Back"
             ^^^^^^
test/system/members_test.rb:32:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should update Member" do
       ^^^^^^^^^^^^^^^^^^^^^^
test/system/members_test.rb:34:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Edit this member", match: :first
             ^^^^^^^^^^^^^^^^^^
test/system/members_test.rb:36:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Email", with: @member.email
            ^^^^^^^
test/system/members_test.rb:37:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Firstname", with: @member.firstname
            ^^^^^^^^^^^
test/system/members_test.rb:38:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Lastname", with: @member.lastname
            ^^^^^^^^^^
test/system/members_test.rb:39:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Netid", with: @member.netid
            ^^^^^^^
test/system/members_test.rb:40:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Phone", with: @member.phone
            ^^^^^^^
test/system/members_test.rb:41:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Points", with: @member.points
            ^^^^^^^^
test/system/members_test.rb:42:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Shirt", with: @member.shirt
            ^^^^^^^
test/system/members_test.rb:43:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Strikes", with: @member.strikes
            ^^^^^^^^^
test/system/members_test.rb:44:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Uin", with: @member.uin
            ^^^^^
test/system/members_test.rb:45:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Update Member"
             ^^^^^^^^^^^^^^^
test/system/members_test.rb:47:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_text "Member was successfully updated"
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/members_test.rb:48:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Back"
             ^^^^^^
test/system/members_test.rb:51:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should destroy Member" do
       ^^^^^^^^^^^^^^^^^^^^^^^
test/system/members_test.rb:53:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Destroy this member", match: :first
             ^^^^^^^^^^^^^^^^^^^^^
test/system/members_test.rb:55:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_text "Member was successfully destroyed"
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/test_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
ENV["RAILS_ENV"] ||= "test"
^
test/test_helper.rb:1:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= "test"
    ^^^^^^^^^^^
test/test_helper.rb:1:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= "test"
                     ^^^^^^
test/test_helper.rb:2:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "../config/environment"
                 ^^^^^^^^^^^^^^^^^^^^^^^
test/test_helper.rb:3:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails/test_help"
        ^^^^^^^^^^^^^^^^^

43 files inspected, 475 offenses detected, 463 offenses autocorrectable
